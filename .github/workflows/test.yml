name: Test and Build

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-

    - name: Install dependencies
      run: npm ci

    - name: Build project
      run: npm run build

    - name: Run tests
      run: npm test

    - name: Test CLI functionality
      run: |
        echo "Testing CLI build..."
        node dist/cli.js --help || echo "CLI help command completed"

    - name: Verify MCP server can start
      timeout-minutes: 1
      run: |
        echo "Testing MCP server startup..."
        timeout 10s node dist/index.js || echo "MCP server test completed"

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm ci

    - name: Check TypeScript compilation
      run: npx tsc --noEmit

    - name: Check for build artifacts
      run: |
        npm run build
        ls -la dist/
        echo "Build completed successfully"
